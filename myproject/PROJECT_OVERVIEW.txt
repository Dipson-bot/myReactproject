Project Overview: myproject

Description:
This is a Django-based web application project that uses Django REST Framework to provide API endpoints for managing items. The project includes two main apps: 
- api: Handles API endpoints for retrieving and adding items.
- base: Contains the data model for items.

Key Features:
- API endpoint at '/' (GET) to retrieve a list of items.
- API endpoint at '/add/' or '/add-item/' (POST) to add a new item.
- Uses Django REST Framework for serialization and API view handling.
- SQLite database backend for data storage.

Project Structure:
- manage.py: Django project management script.
- myproject/: Django project configuration directory.
- api/: Django app containing views, serializers, and URL configurations for the API.
- base/: Django app containing the data model for items.

How to Launch the Project:

1. Set up a Python virtual environment (if not already done):
   python -m venv venv

2. Activate the virtual environment:
   On Windows PowerShell:
     .\venv\Scripts\Activate.ps1
   On Windows CMD:
     .\venv\Scripts\activate.bat
   On Unix or MacOS:
     source venv/bin/activate

3. Install the required dependencies:
   pip install -r requirements.txt
   (If requirements.txt is not present, install Django and djangorestframework manually)
   pip install django djangorestframework

4. Apply database migrations:
   python manage.py migrate

5. Run the development server:
   python manage.py runserver

6. Access the API endpoints:
   - GET http://127.0.0.1:8000/ to retrieve items.
   - POST http://127.0.0.1:8000/add/ or /add-item/ to add a new item.

Notes:
- The project uses SQLite as the database.
- Make sure to create and activate the virtual environment before running the server.
- The API views use Django REST Framework decorators and serializers.

This overview should help you understand the project and run it on your local machine.
